<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendário de Eventos</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="icon" href="./img/favicon-32x32.png" type="image/x-icon">
</head>

<header>
    <%- include('./navbarAluno.ejs', { activePage: 'eventosAluno' }) %> <!-- Navbar -->
</header>

<body>
    <div class="titulo">
        <h1>Eventos</h1> <!-- Título da página -->
    </div>
    <div class="container">

        <div class="calendar" id="calendar">
            <div class="navigation">
                <button id="prev-month" aria-label="Mês Anterior"><i class="fas fa-chevron-left"></i></button>
                <div id="month-year"></div>
                <button id="next-month" aria-label="Próximo Mês"><i class="fas fa-chevron-right"></i></button>
            </div>
            <div class="weekdays">
                <div class="weekday">Dom</div>
                <div class="weekday">Seg</div>
                <div class="weekday">Ter</div>
                <div class="weekday">Qua</div>
                <div class="weekday">Qui</div>
                <div class="weekday">Sex</div>
                <div class="weekday">Sáb</div>
            </div>
            <div class="days" id="days"></div>
            <div id="selected-date" 
            style=" display: flex;
                    flex-direction: column;
                    align-items: center;
                    margin-top: 40px;
                    font-weight: bold;
                    font-size: 20px;
                    ">
                Evento do dia:<span id="date-display"></span>
            </div>
        </div>

        <div class="event-form">
            <h3>Eventos: </h3>
        
            <% evento.forEach(evento => { %>
                <div class="lista-evento">
                    <span class="titulo-evento">
                        <%= evento.nome_evento %>
                    </span>
                    <span class="titulo-detalhe">
                        <%= evento.horario_evento %>,
                        <%= new Date(evento.data_evento).toLocaleDateString('pt-BR') %>,
                        <%= evento.local_evento %>
                    </span>
                  
                </div>
            <% }); %>
        
            <div class="indica">
                <form action="/indicacoesEventosAluno" method="GET">
                    <button class="event-form-button add-event">Indicar Evento</button>
                </form>
            </div>
        </div>

    </div>
</body>
<footer>
    <%- include('./footer.ejs', { activePage: 'eventosAluno' }) %>
</footer>

</html>

<style>
    /* Estilos básicos e layout */
    body {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        background-image: linear-gradient(rgba(0, 13, 56, 0.5), rgba(0, 13, 56, 0.5)), url('./img/foto_fundo.png');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        z-index: 1; /* Certifica que o fundo não bloqueie outros elementos */
    }

    header {
        position: fixed; /* Mantém a navbar fixa no topo */
        top: 0;
        width: 100%;
        z-index: 9999; /* Navbar sempre acima do conteúdo */
    }

    .container {
        display: flex;
        width: 50%;
        max-width: 1200px;
        margin: auto;
        padding: 100px;
        position: relative;
        z-index: 2; /* Eleva o container para ser clicável */
    }

    .calendar {
        flex: 2;
        background-color: #ffffff;
        border-radius: 10px;
        padding: 10px;
        margin-right: 15px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        z-index: 1;
        position: relative;
    }

    .event-form {
    flex: 1;
    background-color: #ffffff;
    border-radius: 10px;
    padding: 10px;
    padding-right: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    position: relative;
    z-index: 3; /* O form de eventos estará abaixo do calendário */
    max-height: 500px; /* Definindo uma altura máxima para o container */
    overflow-y: auto; /* Adiciona rolagem vertical */
}

/* Estilizando o scrollbar */
.event-form::-webkit-scrollbar {
    width: 10px; /* Largura do scrollbar */
    border-radius: 0px 0px 20px;
}

.event-form::-webkit-scrollbar-thumb {
    background-color: #007bff; /* Cor do polegar (a parte que você arrasta) */
    border-radius: 10px; /* Arredonda os cantos do polegar */
}

.event-form::-webkit-scrollbar-track {
    background-color: #f1f1f1; /* Cor de fundo do "trilho" do scrollbar */
    border-radius: 10px; /* Arredonda os cantos do trilho */
}

    .titulo {
        border-bottom: 3px solid white;
        text-align: center;
        color: #fff;
        padding: 20px;
    }

    .event-form-button {
        display: flex;
        padding: 10px 15px; /* Adiciona espaçamento interno */
        font-size: 14px;
        color: #fff;
        background-color: #003366; /* Cor padrão do botão */
        border: none;
        border-radius: 5px; /* Cantos arredondados */
        cursor: pointer; /* Indica que o botão é clicável */
        transition: background-color 0.3s; /* Transição suave */
        margin-bottom: 15px; /* Espaçamento abaixo do botão */
    }

    .event-form-button:hover {
        background-color: rgb(0, 12, 26); /* Cor do botão ao passar o mouse */
    }

    .indica {
        display: flex; /* Ativa o flexbox */
        justify-content: center; /* Centraliza horizontalmente */
        margin-top: 20px; /* Espaço acima do botão */
    }

    #selected-date {
        margin-top: 20px;
        font-weight: bold;
        text-align: center;
        color: #003366; /* Cor do texto */
        background-color: rgba(255, 255, 255, 0.8); /* Fundo levemente branco */
        border: 2px solid #003366; /* Borda do evento selecionado */
        padding: 10px; /* Espaçamento interno */
        border-radius: 5px; /* Cantos arredondados */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Sombra para dar destaque */
        transition: background-color 0.3s, color 0.3s; /* Transição suave */
    }

    .botao-editar-container {
    display: flex;
    justify-content: center; /* Centraliza horizontalmente */
    margin-top: 10px; /* Espaçamento acima do botão */
}

    .navigation button {
        background-color: #003366; /* Cor padrão dos botões de navegação */
        color: #fff; /* Cor do texto */
        border: none; /* Remove borda */
        border-radius: 5px; /* Cantos arredondados */
        padding: 10px; /* Adiciona espaçamento interno */
        cursor: pointer; /* Indica que o botão é clicável */
        transition: background-color 0.3s; /* Transição suave */
    }

    .navigation button:hover {
        background-color: #011325; /* Cor do botão ao passar o mouse */
    }

    .event-form h3 {
        margin-top: 0;
        margin-bottom: 10px;
    }

    .titulo-evento {
        color: #003366;
        font-size: 18px;
        display: flex;
    }

    .titulo-detalhe {
        color: #888;
        margin-bottom: 5px;
        font-size: 14px;
        display: block;
    }

    .navigation {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    #month-year {
        font-size: 20px;
        color: #333;
    }

    .weekdays {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        text-align: center;
        font-weight: bold;
        background-color: #f1f1f1;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .weekday {
        padding: 6px;
        font-size: 12px;
        background-color: #e9ecef;
        border: 1px solid #ccc;
        overflow: hidden;
    }

    .days {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        grid-auto-rows: 60px;
        gap: 1px;
        text-align: center;
        z-index: 10; /* Garantindo que os dias estejam acima de tudo */
    }

    .day {
        padding: 8px;
        border-radius: 5px;
        background-color: #ffffff;
        border: 1px solid #ddd;
        position: relative;
        cursor: pointer;
        transition: background-color 0.3s, border-color 0.3s;
        box-sizing: border-box;
        font-size: 14px;
        z-index: 20; /* Certifica-se de que cada dia seja clicável */
    }

    .day.empty {
        background-color: #f9f9f9;
    }

    .day:hover {
        background-color: #f0f0f0;
        border-color: #bbb;
    }

    .day.event:hover {
        background-color: #e0e0e0; /* Efeito hover específico para dias com eventos */
    }

    .event-indicator {
        content: '';
        display: block;
        position: absolute;
        bottom: 5px;
        left: 50%;
        transform: translateX(-50%);
        width: 10px;
        height: 10px;
        background-color: #007bff;
        border-radius: 50%;
    }

    @media (max-width: 768px) {
        .container {
            flex-direction: column;
            width: 100%;
            padding: 20px;
            z-index: 1; /* Certifica que o conteúdo não sobrepõe a navbar */
        }

        .calendar {
            margin-right: 0;
            margin-bottom: 20px;
            z-index: 1; /* Mantém o calendário abaixo da navbar */
        }

        .event-form {
            z-index: 1; /* Também abaixo da navbar */
        }

        header {
            z-index: 9999; /* Navbar sempre no topo em telas menores */
        }
    }
</style>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        const monthYearElement = document.getElementById('month-year');
        const daysElement = document.getElementById('days');
        const prevMonthButton = document.getElementById('prev-month');
        const nextMonthButton = document.getElementById('next-month');

        let currentYear = new Date().getFullYear();
        let currentMonth = new Date().getMonth();

        // Obter eventos do servidor
        const eventos = <%- JSON.stringify(evento) %>; // Obtenha os eventos do backend

        function generateCalendar(year, month) {
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            let calendarHTML = '';

            monthYearElement.textContent = `${firstDay.toLocaleString('default', { month: 'long' })} ${year}`;

            // Adicionar dias do mês
            for (let day = 1; day <= lastDay.getDate(); day++) {
                const date = new Date(year, month, day).toLocaleDateString('pt-BR');
                const hasEvent = eventos.some(evento => new Date(evento.data_evento).toLocaleDateString('pt-BR') === date);
                
                calendarHTML += `<div class="day${hasEvent ? ' event' : ''}" data-date="${date}">${day}${hasEvent ? `<div class="event-indicator"></div>` : ''}</div>`;
            }

            // Adicionar células vazias para o início do mês
            const firstDayWeekday = firstDay.getDay();
            for (let i = 0; i < firstDayWeekday; i++) {
                calendarHTML = `<div class="day empty"></div>` + calendarHTML;
            }

            // Preencher células restantes na última semana
            const lastDayWeekday = lastDay.getDay();
            const daysToFill = (lastDayWeekday < 6) ? 6 - lastDayWeekday : 0;
            for (let i = 0; i < daysToFill; i++) {
                calendarHTML += '<div class="day empty"></div>';
            }

            daysElement.innerHTML = calendarHTML;

            // Adicionar evento de click para seleção de data
            const dayElements = document.querySelectorAll('.day:not(.empty)');
            dayElements.forEach(day => {
                day.addEventListener('click', () => {
                    const date = day.getAttribute('data-date');
                    const eventoDoDia = eventos.find(evento => new Date(evento.data_evento).toLocaleDateString('pt-BR') === date);
                    
                    if (eventoDoDia) {
                        document.getElementById('date-display').innerHTML = `
                            <strong>${eventoDoDia.nome_evento}</strong><br>
                            ${eventoDoDia.horario_evento}, ${new Date(eventoDoDia.data_evento).toLocaleDateString('pt-BR')}, ${eventoDoDia.local_evento}
                        `;
                    } else {
                        document.getElementById('date-display').textContent = ''; // Limpa a exibição se não houver evento
                    }
                });
            });
        }

        prevMonthButton.addEventListener('click', () => {
            currentMonth--;
            if (currentMonth < 0) {
                currentMonth = 11;
                currentYear--;
            }
            generateCalendar(currentYear, currentMonth);
        });

        nextMonthButton.addEventListener('click', () => {
            currentMonth++;
            if (currentMonth > 11) {
                currentMonth = 0;
                currentYear++;
            }
            generateCalendar(currentYear, currentMonth);
        });

        // Geração inicial do calendário
        generateCalendar(currentYear, currentMonth);
    });
</script>